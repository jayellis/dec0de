{"version":3,"file":"static/js/245.9ba13391.chunk.js","mappings":"6JA0BA,EAvBoB,SAASA,GAAoE,IAAvBC,EAAU,uDAAG,QAErF,GAA0CC,EAAAA,EAAAA,WAAS,GAAM,eAAlDC,EAAc,KAAEC,EAAe,KAkBtC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,sBACnB,YAAc,IAAZC,GAAW,YAAN,GAELJ,EAAgBI,EAAML,eACxB,GACA,CACEF,WAAAA,IAMJ,OAHID,EAAIS,SACNH,EAASI,QAAQV,EAAIS,SAEhB,WACFT,EAAIS,SAAWH,EAASK,UAAUX,EAAIS,QAC3C,CACF,GAAG,IACIN,CACT,E,SCPA,EAdiC,SAAES,GACjC,IAAMZ,GAAMa,EAAAA,EAAAA,UACNC,EAAWC,EAAaf,GAE9B,OACE,gBACEA,IAAKA,EACLgB,UAAYF,EAAW,WAAa,YAAa,SAE/CF,EAAMK,UAGd,C,6DCUA,UArB0B,WACxB,OACE,+BACE,8BACE,gBAAKD,UAAU,gBAAe,UAC5B,gBAAKA,UAAU,iBAAgB,UAC7B,UAAC,IAAS,YACR,qCACA,yBACE,cAAGE,KAAK,wBAAuB,wCAU/C,C","sources":["hooks/UseOnScreen.ts","components/Animation.component.tsx","pages/Contact.tsx"],"sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\n\nconst useOnScreen = function(ref: React.MutableRefObject<HTMLDivElement>, rootMargin = \"200px\") {\n  // State and setter for storing whether element is visible\n  const [isIntersecting, setIntersecting] = useState(false)\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        // Update our state when observer callback fires\n        setIntersecting(entry.isIntersecting)\n      },\n      {\n        rootMargin,\n      }\n    )\n    if (ref.current) {\n      observer.observe(ref.current)\n    }\n    return () => {\n      if(ref.current) { observer.unobserve(ref.current) }\n    }\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return isIntersecting\n}\n\nexport default useOnScreen\n","import React, { useRef } from 'react'\nimport UseOnScreen from '../hooks/UseOnScreen'\n\nconst Animation: React.FC<any> = ( props ) => {\n  const ref = useRef() as React.MutableRefObject<HTMLDivElement>\n  const onScreen = UseOnScreen( ref )\n\n  return (\n    <div \n      ref={ref}\n      className={ onScreen ? 'zoom-in ' : 'zoom-out ' } \n      >\n      { props.children }\n    </div>\n  )\n}\n\nexport default Animation\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Animation from '../components/Animation.component'\n\nconst Contact: React.FC = () => {\n  return (\n    <>\n      <section>\n        <div className='section-inner'>\n          <div className='section-middle'>\n            <Animation>\n              <h1>Contact</h1>\n              <h2>\n                <a href='mailto:jay@dec0de.com'>\n                  jay@dec0de.com\n                </a>\n              </h2>\n            </Animation>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Contact\n"],"names":["ref","rootMargin","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","current","observe","unobserve","props","useRef","onScreen","UseOnScreen","className","children","href"],"sourceRoot":""}